version: '3.8'

services:
  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672" # RabbitMQ Management UI
    healthcheck:
      test: rabbitmq-diagnostics check_port_connectivity
      interval: 2s
      retries: 60
    restart: always

  asr_service:
    build:
      context: ./ASR
    environment:
      - RABBITMQ_HOST=rabbitmq
    depends_on:
      rabbitmq:
        condition: service_healthy
    restart: always
    volumes:
      - /Users/...a/asr_models/models:/app/app/models # Host folder mapped to container
    # deploy:
    #   replicas: 1
    #   resources:
    #     limits:
    #       cpus: "0.5"
    #       memory: "1G"

  translation_service:
    build:
      context: ./translation
    environment:
      - RABBITMQ_HOST=rabbitmq
    depends_on:
      rabbitmq:
        condition: service_healthy
    restart: always
    volumes:
      - /Users/...a/translation_models/models:/app/app/models # Host folder mapped to container
    # deploy:
    #   resources:
    #     limits:
    #       cpus: "0.4"
    #       memory: "1G"

  orchestrator:
    build:
      context: ./TaskOrchestrator
    ports:
      - "8000:8000"
    environment:
      - RABBITMQ_HOST=rabbitmq
    depends_on:
      - rabbitmq
      - asr_service
      - translation_service
    restart: always
    # deploy:
    #   resources:
    #     limits:
    #       cpus: "0.3"
    #       memory: "0.5G"
  mongodb:
    image: mongo:6.0
    container_name: mongodb
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_INITDB_DATABASE: mydatabase
    volumes:
      - mongodb_data:/data/db

volumes:
  mongodb_data:
